/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Habit as PrismaHabit } from "@prisma/client";

export class HabitServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.HabitCountArgs, "select">): Promise<number> {
    return this.prisma.habit.count(args);
  }

  async habits(args: Prisma.HabitFindManyArgs): Promise<PrismaHabit[]> {
    return this.prisma.habit.findMany(args);
  }
  async habit(args: Prisma.HabitFindUniqueArgs): Promise<PrismaHabit | null> {
    return this.prisma.habit.findUnique(args);
  }
  async createHabit(args: Prisma.HabitCreateArgs): Promise<PrismaHabit> {
    return this.prisma.habit.create(args);
  }
  async updateHabit(args: Prisma.HabitUpdateArgs): Promise<PrismaHabit> {
    return this.prisma.habit.update(args);
  }
  async deleteHabit(args: Prisma.HabitDeleteArgs): Promise<PrismaHabit> {
    return this.prisma.habit.delete(args);
  }
}
