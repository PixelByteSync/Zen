/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Streak as PrismaStreak } from "@prisma/client";

export class StreakServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.StreakCountArgs, "select">): Promise<number> {
    return this.prisma.streak.count(args);
  }

  async streaks(args: Prisma.StreakFindManyArgs): Promise<PrismaStreak[]> {
    return this.prisma.streak.findMany(args);
  }
  async streak(
    args: Prisma.StreakFindUniqueArgs
  ): Promise<PrismaStreak | null> {
    return this.prisma.streak.findUnique(args);
  }
  async createStreak(args: Prisma.StreakCreateArgs): Promise<PrismaStreak> {
    return this.prisma.streak.create(args);
  }
  async updateStreak(args: Prisma.StreakUpdateArgs): Promise<PrismaStreak> {
    return this.prisma.streak.update(args);
  }
  async deleteStreak(args: Prisma.StreakDeleteArgs): Promise<PrismaStreak> {
    return this.prisma.streak.delete(args);
  }
}
